openapi: 3.0.0
info:
  description: |
    Describes APIs to be implemented by BankID.


    **Changes**
    * Version 1.1.19 (22.02.2022)
      * Added ```outdated_subs``` field to IDToken and AuthorizationIDToken containing all identifiers from the associated identities provided to the application via BankID.
      * Some elements in Document Objects may be empty 


    * Version 1.1.18 (11.10.2021)
      * Added new feature for support of signature of multiple documents. 


    * Version 1.1.17 (09.12.2021)
      * Added new parametr ```available_services``` in Bank List API.
    * Version 1.1.16 (11.10.2021)
      * As part of the unification, the ```upload_url``` parameter in the GET /verification response has been renamed to ```upload_uri```
      * The query parameter ```document_id``` in GET /verification is newly defined as optional
      * New response type 501 in /ros endpoint 

    * Version 1.1.15 (04.10.2021)
      * Removed the ```whole_dokument``` parameter from the document /verification response

    * Version 1.1.14 (29.09.2021)
      * Updates and examples for the Sign service

    * Version 1.1.13 (13.09.2021)
      * The element time in the verification is now optional

        **Affected endpoint:** /profile

    * Version 1.1.12 (30.08.2021)
      * The time in verified_clamis.verification.time must be **with colon in date offset** (e.g. 2015-04-05T14:31:22+02:00)
      * Max_age element in /ros endpoint request is in number format now.

    * Version 1.1.11 (17.08.2021)
      * The ```priority``` parameter in the ```signObject``` element is now mandatory and unique. The affected service is /ros.
      * New element with signed signObject as part of idtoken after authorization of the document by the end user.
      * Added scope ```notification.claims_updated``` (the application wants to send notifications) for **/profile** and **/userinfo** endpoints

    * Version 1.1.10 (22.07.2021)
      * Element ```verified_claims-verification.time``` changed to mandatory. Now, in case of sending a verification element, 
        it is always necessary to send the date and time of the verification in the ISO 8601 format.

        **Affected endpoints:** /userinfo and /profile

    * Version 1.1.9 (22.07.2021)
      * For the ```max_age``` parameter in the /auth endpoint, the description and occurrence obligation changed.

    * Version 1.1.8 (20.07.2021)
      * Added ```birthcountry``` to /profile ```verified_claims``` element in response

    * Version 1.1.7 (18.06.2021)
      * Correct response ```application/json``` on POST /ros endpoint
      * Added ```birthcountry``` element to /profile response

    * Version 1.1.6 (17.05.2021)
      * Reword tags and summaries to better reflect official BankID product portfolio

    * Version 1.1.5 (13.05.2021)
      * Removed unnecessary specification for the document upload resource during document verification
      * Clarified `signObject` and `documentObject` specification and examples
      * Clarified various property data types and examples throughout the signing process

    * Version 1.1.4 (30.04.2021)
      * Fixed server reference to correct host oidc.sandbox.bankid.cz
      * Added code_challenge_methods_supported element to OIDCConfigure scheme

    * Version 1.1.3 (06.04.2021)
      * A more well-arranged list of scopes (directly in the description of /userinfo and /profile)

    * Version 1.1.2 (24.03.2021)
      * Fixed error response format at /userinfo and /profile

    * Version 1.1.1 (14.02.2021)
      * GET /auth endpoint specification
      * Added for better clarity complete possible list of parameters of ```claims``` element in ```verified_claims``` for services /userinfo and /profile


    * Version 1.1.0
      * added optional element ```bank_id``` in POST /ros endpoint
      * elements in the ```sign_area``` object are now all mandatory (POST /ros)
      * ```structured_scope``` are not newly array type (POST /ros)
      * removed ```remote_authorization``` element (POST /ros)
      * format of ```max_age``` element changed from date-time to number of seconds (POST /ros)
      * changed response to the verification of the signed document. Newly, BankID returns a metadata collection of all signatures in the document (POST /verification)
      * the element ```verification``` changed to optional within ```verified_claims``` (GET /profile)

    * Version 1.0.0
      * the first version of the document



    BankID is only required to implement APIs that are specified in this document, as that is what will be used by the SeP.
    However for additional explanations and details, it is strongly recommended that readers are familiar with the specifications below.


    **Verified Data Representation extension for /userinfo and /profile resource**


    This extension to OpenID Connect wants to ensure that IDPs cannot mix up verified 
    and unverified Claims and incidentally process unverified Claims as verified Claims.


    The representation proposed therefore provides the IDP with the verified Claims 
    within a container element verified_claims. This container is composed of the verification 
    evidence related to a certain verification process and the corresponding Claims 
    about the End-User which were verified in this process.

      Verification elements contains the information about the process conducted to 
      verify a person's identity and bind the respective person data to a user account.


    **Source material and relevant modifications:**

    * [OpenID.Core](https://openid.net/specs/openid-connect-core-1_0.html) OpenID Connect Core 1.0

        * Signed and encrypted JWTs MAY be used for /userinfo and /profile responses

        * In Service Provider's BankID relationship the UserInfo Claims MUST be returned as the 
        members of a JSON object unless a signed or encrypted response was requested during 
        Client Registration.

        * The sub (subject) Claim MUST always be returned in the UserInfo Response.

        * If a Claim is not returned, that Claim Name SHOULD be omitted from the JSON object 
        representing the Claims; it SHOULD NOT be present with a null or empty string value.

        * The sub Claim in the UserInfo and Profile Response MUST be verified to exactly match the sub Claim 
        in the ID Token; if they do not match, the UserInfo Response values MUST NOT be used.

        * The UserInfo and Profile Endpoint MUST return a content-type header to indicate which format is 
        being returned and if the response body is a text JSON object; the response body SHOULD 
        be encoded using UTF-8.

        * If the UserInfo or Profile Response is signed and/or encrypted, then the Claims are returned in a 
        JWT and the content-type MUST be application/jwt. The response MAY be encrypted without 
        also being signed. If both signing and encryption are requested, the response MUST be 
        signed then encrypted, with the result being a Nested JWT.

      * [OpenID.IdentityAssurance](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html) 
      OpenID Connect for Identity Assurance 1.0

        * The `txn` Claim as defined in [RFC8417](https://tools.ietf.org/html/rfc8417) is used 
        in the context of BankID data exchange to build audit trails across the parties involved 
        in an OpenID Connect transaction. Claim txn is always REQUIRED in the userinfo response 
        content.

        * This arrangement introduces the possibility for the bank to separate the verified
         Claims within a container element `verified_claims`. This container is composed of the 
         verification evidence related to a certain verification process and the corresponding 
         Claims about the End-User which were verified in this process.

        * Implementations MUST ignore any sub-element not defined in this specification or 
        extensions of this specification.

        * In the case of this definition verification element MUST consist of the following elements:

          * `trust_framework`: REQUIRED. String determining the trust framework governing the 
          identity verification process. For example, the value of ``cz_aml`` for verification 
          according to the Czech AML law.

          * `time`: OPTIONAL. Time stamp in ISO 8601:2004 [ISO8601-2004] YYYY-MM-DDThh:mm:ssÂ±hh 
          format representing the date and time when identity verification took place.

          * `verification_process`: REQUIRED. In the case of this specification, the verification 
          process shall include the tax number of the relevant bank where the initial physical 
          verification of the client took place. This is the bank's tax number, which is kept in 
          the list of regulated and registered entities of the CNB JERRS.

          * `claims`: The claims element contains the claims about the End-User that were 
          verified during the defined verification process.

        * Verified Claims can be requested on the level of individual Claims about the End-User 
        by utilizing the claims parameter as defined in Section 5.5. of the OpenID Connect 
        specification [OpenID](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter)

    * [OpenID.Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html) OpenID Connect Discovery 1.0

    * [OpenID.SessionManagement](https://openid.net/specs/openid-connect-session-1_0.html) OpenID Session Management 1.0

    * [OpenID.Front-ChannelLogout](https://openid.net/specs/openid-connect-frontchannel-1_0.html)

    * [OpenID.Back-ChannelLogout](https://openid.net/specs/openid-connect-backchannel-1_0.html)

    * [PKCE - RFC7636](https://tools.ietf.org/html/rfc7636) Proof Key for Code Exchange by OAuth Public Clients

    * [RFC6749](https://tools.ietf.org/html/rfc6749) The OAuth 2.0 Authorization Framework

    * [RFC6750](https://tools.ietf.org/html/rfc6750) The OAuth 2.0 Authorization Framework: Bearer Token Usage

    * [RFC7662](https://tools.ietf.org/html/rfc7662) OAuth 2.0 Token Introspection

    * [RFC7517](https://tools.ietf.org/html/rfc7517) JSON Web Key (JWK)